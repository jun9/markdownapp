{"ts":1381752966924,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<title>OpenCPU Markdown App</title>\n    \n<script src=\"underscore-min.js\"></script>    \n<script src=\"jquery-1.10.1.min.js\"></script>\n<script src=\"opencpu.js\"></script>\n<script src=\"src-min-noconflict/ace.js\" type=\"text/javascript\" charset=\"utf-8\"></script>\n\n<script>\n$(function(){\n  var editor = ace.edit(\"editor\");\n  editor.setTheme(\"ace/theme/monokai\");\n  editor.getSession().setMode(\"ace/mode/r\");\n  editor.setFontSize(\"14px\");\n\n  //This app requires OpenCPU 1.0.1 or higher!\n  \n  function domarkdown(e){\n    var req = opencpu.r_fun_call(\"rmdtext\", {\n      text : editor.getSession().getValue()\n    }, function(session){\n      $(\"iframe\").attr('src', session.getLoc() + \"files/output.html\");     \n    }).fail(function(text){\n      alert(\"Error: \" + req.responseText);\n    });\n  }\n\n  //auto run after 3 seconds of no activity\n  var update = _.debounce(domarkdown, 3000);\n  \n  //register event\n  editor.on(\"change\", update);\n  \n  //init on start\n  domarkdown();  \n});\n</script>\n\n<style type=\"text/css\" media=\"screen\">\n \n#editor { \n  position: absolute;\n  top: 0px;\n  left: 0px;\n  width: 100%;\n  height: 100%;\n}\n\niframe { \n  position: absolute;\n  top: 0px;\n  right: 0px;\n  width: 604px;\n  height: 100%;\n  border: 0;\n  margin: 0;\n  z-index: 999999;\n}\n\n</style>\n</head>\n<body>\n\n<div id=\"editor\">The Normal Distribution\n=======================\n\nThe normal (or Gaussian) distribution is defined as follows:\n\n$$latex\nf(x;\\mu,\\sigma^2) = \\frac{1}{\\sigma\\sqrt{2\\pi}} \ne^{ -\\frac{1}{2}\\left(\\frac{x-\\mu}{\\sigma}\\right)^2 }\n$$\n\nTo generate random draws from a normal distribution we use the **rnorm** function:\n\n```{r block1}\noutput <- rnorm(1000, 100, 15);\n```\n\nThe normal distribution has the typical bell shape:\n\n```{r block2, fig.width=8, fig.height=5}\nlibrary(ggplot2)\nqplot(output)\n```\n\n## Kernel density estimation\n\nWe can perform density estimation on the sample:\n\n```{r block3, fig.width=8, fig.height=5}\nplot(density(output))\n``` \n\n## Carl Friedrich GauÃŸ\n\nThis little guy had something to do with it\n\n!['Gauss'](http://goo.gl/ZwTTXv)\n</div>\n\n<iframe src=\"about:blank\"></iframe>\n\n</body>\n</html>\n"]],"start1":0,"start2":0,"length1":0,"length2":2135}]],"length":2135}
{"contributors":[],"silentsave":false,"ts":1381753128451,"patch":[[{"diffs":[[0,"th: "],[-1,"6"],[1,"8"],[0,"04px"]],"start1":1215,"start2":1215,"length1":9,"length2":9}]],"length":2135,"saved":false}
